@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Index</title>
    <link rel="stylesheet" href="~/Content/Site.css" />
    <link rel="stylesheet" href="~/Scripts/jstree/dist/themes/default/style.css" />
    <link rel="stylesheet" href="~/Content/bootstrap.css" />
    <link rel="stylesheet" href="~/Content/jquery.splitter.css" />
    @Scripts.Render("~/Scripts/jquery-1.10.2.js")
    @Scripts.Render("~/Scripts/jquery.unobtrusive-ajax.js")
    <script src="~/Scripts/ace/src/ace.js" type="text/javascript" charset="utf-8"></script>
    <script src="~/Scripts/jstree/dist/jstree.js" type="text/javascript" charset="utf-8"></script>
    <script src="~/Scripts/jquery.splitter.js"></script>
</head>
<body>
    <div class="navbar-default" id="header">
        <span style="font-size: 24px; font-family: 'Century Gothic'; margin: 5px;">Il Generator</span>
        <button class="btn btn-default text-center">
            Disassemble
        </button>
    </div>

    @using (Ajax.BeginForm("ResultCode", null, new AjaxOptions() { OnSuccess = "createTree" }, new
            {
                id = "inputForm"
            }))
            {
                <textarea name="sourceCode" style="display: none"></textarea>
            }
    <div id="content" style="height:100%;">
        <div id="editorContainer" class="editorContainer">
            <div id="editor" class="editor"></div>
        </div>
        <div id="treeContainer">
            <div id="tree"></div>
            <div id="resultEditorContainer" class="editorContainer">
                <div id="resultEditor" class="editor"></div>
            </div>
        </div>
    </div>

    <script src="~/Scripts/Editors.js" type="text/javascript" charset="utf-8"></script>
    <script>
        var codeSplitter = $("#content").split({
            orientation: 'horizontal',
            limit: 100,
            onDrag: function (event) {
                editor.resize();
            }
        })

        var infoSplitter = $("#treeContainer").split({
            orientation: 'vertical',
            limit: 100,
            onDrag: function (event) {
                console.log('OK');
            }
        })

        function createTree(dataObject) {
            $("#tree").jstree('destroy');
            var tree = $("#tree").jstree(
                {
                    'types': {
                        "demo": {
                            "icon": "glyphicon glyphicon-flash"
                        },
                        "dd": {
                            "icon" : "glyphicon glyphicon-ok"
                        }
                    },
                    'core': {
                        'multiple': false,
                        'data': jsonEncode(dataObject.Tree)
                    },
                    'plugins': ["types"]

                });
            tree.on('changed.jstree', function (e, data) {
                var curr = data.instance.get_node(data.selected[0]);
                if (typeof curr.children !== "undefined" && curr.children.length == 0) {
                    resultEditor.setValue(curr.data);
                    tree.set_type(curr, "dd");
                }
            });
        }
    </script>

</body>



</html>



